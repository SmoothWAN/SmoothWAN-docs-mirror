{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Donate to Parrot Rescue Lebanon \ud83e\udd9c </p> <p></p>"},{"location":"#internet-bonding-router-with-seamless-failover-using-speedify","title":"Internet bonding router with seamless failover using Speedify","text":"<p>SmoothWAN is a customized OpenWRT based DIY router for quick internet bonding setup using  Speedify, with an emphasis on using an internet browser for easy configuration. </p> <p>This project is not affiliated with  Speedify or Connectify.</p> <p>As of Q4 2024, Speedify now requires a license for routers.</p> <p>WAN is an internet connection.</p> <p>Supported hardware ordered by performance</p> <ul> <li>PC Intel/AMD</li> <li>Raspberry Pi 4 / Pi 400</li> <li>GL.iNet Flint and Slate AX</li> </ul> <p>For running on other hardware or existing OpenWrt users you can use the unofficial installer here</p> <p>Update: Speedify officially supports OpenWrt as of Q4 2024</p> <p>Use cases </p> <ul> <li>Build a reliable internet access using multiple WANs for seamless failover, lossless and bonded speeds terminating over a single IP address.</li> <li>Run a VPN over Speedify: corporate use, bypass captcha/IP-blocking etc.</li> <li>Cover all connected devices in a home network when it's not possible or practical to share a WAN and run Speedify on each device e.g: limited mobile data, IoT and multimedia.</li> </ul> <p>Extras</p> <ul> <li>Use Engarde for self-hosting alternative to Speedify's Redundant mode.</li> <li>Use TinyFEC VPN for fixing a lossy unusable internet connection using forward-error-correction at a speed cost while maintaining low latency.</li> <li>Many more in features</li> </ul> <p>Typical setup </p> <p>WebUI preview</p> <p></p>"},{"location":"adg/","title":"AdGuard Home","text":""},{"location":"adg/#due-to-popular-request-and-leak-proof-dns-adgh-is-the-default-dns-server","title":"Due to popular request and leak-proof DNS, ADGH is the default DNS server.","text":""},{"location":"adg/#adguard-home-is-a-local-network-wide-advertising-blocker","title":"AdGuard Home is a local network-wide advertising blocker","text":"<p>How to enable adblocking</p> <ul> <li>Visit https://172.17.17.2:3000 or your LAN IP :3000 and click \"Enable protection\" </li> </ul> <p>Notes</p> <ul> <li>You can change password in the configuration tab.</li> </ul>"},{"location":"contact/","title":"Contact","text":"Quick links <p>Visit Discourse for discussions, help and live chat on networking configurations and Speedify/Engarde/TinyFEC topics, and issues for SmoothWAN related issues. </p>"},{"location":"devl/","title":"Development Notes","text":"<p>Quick build hints </p> Raspberry Pi 4 and PC <ul> <li>Get your imagebuilder device target archive from: https://downloads.openwrt.org/releases/22.03.3/targets/ </li> <li>Clone repo and copy the corresponding device from devconfigs and packages to imagebuilder root. </li> <li>Run \"sh build.sh\" </li> <li>Compiled image is in <code>bin/...</code> </li> </ul> Gl.iNet Slate AX / Flint (no longer possible - repo is down) <ul> <li>For v1.0 and above follow the the Pi/PC instructions instead.</li> <li><code>git clone https://github.com/gl-inet/gl-infra-builder.git</code> </li> <li><code>sudo apt install build-essential clang flex g++ gawk gcc-multilib gettext \\ git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \\ file wget</code> </li> <li><code>python3 setup.py -c configs/config-wlan-ap.yml</code> </li> <li><code>cd wlan-ap/openwrt</code> </li> <li><code>./scripts/gen_config.py target_wlan_ap-gl-ax1800 luci</code> (replace ax1800 with axt1800 for Slate AX)</li> <li><code>git clone https://github.com/SmoothWAN/smoothwan-feeds.git</code></li> <li>Copy the content of the <code>flint</code> or <code>slateax</code> folder in main SmoothWAN repo to current directory</li> <li><code>./scripts/feeds update -a</code></li> <li><code>./scripts/feeds install -a</code></li> <li><code>./sideload-glibc.sh</code></li> <li>Copy the <code>.config</code> file from the <code>flint</code> or <code>slateax</code> folder in main SmoothWAN repo to current directory</li> <li><code>make -j20 V=sc</code> </li> <li>Compiled image is in <code>bin/targets/ipq...</code> </li> </ul> <p>Notes: </p> <ul> <li> <p>For compiling SmoothWAN packages, compile <code>smoothwan-feeds</code> with OpenWRT build system.</p> </li> <li> <p>Pre-compiled packages are included for easy customization, quick builds and imagebuilder-only setup.</p> </li> <li> <p>GL.iNet builds are full-builds and require comprehensive setup. More at: https://github.com/gl-inet/gl-infra-builder   </p> </li> <li> <p><code>glibc</code> is included from Debian Buster for running Speedify on <code>musl</code> built OpenWrt. Lib included: <code>libc6_2.31-13+deb11u2</code>, and <code>libgcc1_8.3.0-6_armhf</code> for armv7.  Binaries are sideloaded during build. Check <code>sideload-glibc.sh</code> for sources.</p> </li> <li> <p>All binaries are generated on Github Actions</p> <ul> <li>Engarde : https://github.com/SmoothWAN/engarde</li> <li>TinyFEC : https://github.com/SmoothWAN/tinyfecVPN</li> <li>ntopng : https://github.com/SmoothWAN/SmoothWAN-chroot-imagebuilder</li> </ul> </li> </ul>"},{"location":"engarde/","title":"Engarde","text":"<ul> <li>Engarde (by porech): A go network utility to create a reliable IP tunnel over multiple connections.</li> <li>Duplicate traffic over multiple internet connections using Wireguard.</li> <li>A self-hosting alternative to Speedify's Redundant mode, without bufferbloat.</li> <li>Offers ~1ms lossless failover duration, and low latency over lossy connections.</li> <li>No aggregation, speed of the fastest WAN is the result bandwidth throughput.</li> <li>No data consumption reduction on slower WANs, since there is no quality monitoring, hence the low-latency feature compared to Speedify.</li> <li>Processing intensive, requiring 3.0Ghz Intel/AMD router and server for &gt;100Mbit speeds.</li> </ul> <p>Server setup using Vultr (Amazon EC2) as an example with cloud-init: Visit https://my.vultr.com and login/signup, then follow the arrows:  Choose Cloud Compute  Choose High Frequency (since Engarde is single threaded)  Choose latest Ubuntu and the nearest location, example selects European region  Choose a plan according to bandwidth to be used, not hardware resources  Copy and paste the content below then locate and change the password in the pasted content:</p> <p> Wait few minutes till the IP address appears, and note it down You can wait few minutes or monitor progress by clicking View Console   Copy the noted IP address &amp; password in the configuration tab of this page and check Enable, Save &amp; Apply  Engarde will automatically detect connectivty via any interface in Active Interfaces section and use it!  All done! Note that the example shows only one WAN plugged in. Check your IP address at ping.eu,speedtest.net,etc... to check if it's working correctly, it should match the IP address of your server.</p> Notes: <ul> <li>The server is setup to forward ports from 1024 to 65000 to your SmoothWAN appliance/router, adjust as needed.</li> <li>Modern implementation UPnP is automatically configured and enabled for automatic port forwarding.</li> <li>You can also forward ports in VPN -&gt; VPN Port Forwarding.</li> <li>Changing password is done by simply changing the cloud-init field and doing a server reinstall.</li> <li>VPN via server providers is (usually) not log-free as it's used for abuse monitoring, privacy may be equivalent to a direct ISP connection.</li> <li>You can use other providers, Vultr is used as it's the easiest, there is no affiliation.</li> <li>You may need to modify the cloud-init script for some providers, it's limited to KVM/Virt machines only.</li> <li>SSH on the server is disabled by default.</li> </ul>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#common-issues","title":"Common issues","text":""},{"location":"faq/#unable-to-save-changes-restart-speedify-visible-login-button-invisible","title":"Unable to save changes - \"Restart Speedify\" visible - \"Login button\" invisible","text":"<p>Make sure to add the web address to your ad-blocker whitelist. Speedify may have crashed or stopped working.  </p>"},{"location":"faq/#speedify-did-not-detect-internetwan-not-visible","title":"Speedify did not detect internet/WAN not visible","text":"<p>An interface name that starts with \"br-\" prefix is ignored.  </p>"},{"location":"faq/#speedify-bypass-domain-based-not-working-with-pppoe-interfaces","title":"Speedify bypass (domain based) not working with PPPoE interfaces","text":"<p>As of Speedify version 12.6, Speedify seems to use the gateway of each WAN as the DNS resolver for bypass. This may have been fixed in future versions. You can use VPN Policy Based Routing as an alternative.  </p>"},{"location":"faq/#speedify-installer-issues","title":"Speedify installer issues","text":"<ul> <li>Wait around a minute on fresh start or after plugging in single WAN to synchronize date/time  </li> <li>Reboot after first boot or check the date/time in System  </li> <li>Use the best quality WAN during installation  </li> </ul>"},{"location":"faq/#internet-connectivity-issue-on-intelamd-build","title":"Internet connectivity issue on Intel/AMD build","text":"<p>Depending on the hardware and how interfaces are brought up, OpenWRT may create a default WAN interface on first boot as <code>WAN</code> and <code>WAN_6</code>. Delete these interfaces in Network -&gt; Interfaces and restart.  </p>"},{"location":"features/","title":"Features","text":"<p>-&gt; Upcoming features &lt;- </p> <ul> <li>Preset network configuration for various hardware</li> <li>Use your own VPN on top of Speedify/Engarde/TinyFEC.</li> <li>Unique interface naming for USB network devices to preserve data caps and statistics.</li> <li>Speedify installer, auto-update and version selection</li> <li>Bypass Speedify with selective WAN for local devices/ports/domains using Split-tunnling, or using Speedify's internal bypass function with a web app for adaptive WAN selection using data caps and other conditions, utilizing <code>speedify_cli</code></li> <li>ntopng installer for deep packet analysis, real-time flow performance metrics, and traffic identification.</li> <li>AdGuard Home pre-installed and pre-configured (one-click enable) with password change UI addition and working client statistics</li> <li>Tailscale installer for easy remote access to connected devices in your home network  </li> <li>Per platform OpenWRT VPN optimization and additional hints in LuCI apps</li> <li>Extended OpenWrt's diagnostics web page to include Pi <code>vcgencmd</code> tool in-browser and independent WAN speed test</li> <li>Download logs for various apps from browser</li> <li>VPN PBR pre-configured</li> <li>Engarde as an self-hosting alternative to Speedify's Redundant mode (lossless by duplicating traffic across WANs - no aggregation)</li> <li>TinyFEC VPN for fixing a lossy unusable internet connection using forward-error-correction (single WAN - self-hosting)</li> <li>One-click cloud-init script for setting up Engarde &amp; TinyFEC VPN in cloud</li> <li>BitTorrent detection log showing client IP addresses (needed for non-P2P Speedify servers)</li> <li>Per-client (LAN) bandwidth limiter EQoS</li> <li>Auto expand storage to physical free space on PC/Pi</li> <li>Working Speedify captive portal login per WAN</li> <li>IPv6 ready</li> </ul>"},{"location":"flint/","title":"Flint","text":""},{"location":"flint/#port-layout","title":"Port Layout","text":""},{"location":"flint/#80211kvsr-support","title":"802.11k/v/s/r Support","text":"<p>For versions below 0.99.9 GL.iNet <code>wpad</code> is stripped, force update from OpenWrt official server after installation and reboot: <code>opkg update &amp;&amp; opkg remove wpad-openssl &amp;&amp; opkg install wpad-openssl --force-overwrite</code></p>"},{"location":"hostqos/","title":"Equal bandwidth distribution to connected clients","text":"<ol> <li>Visit Network -&gt; SQM QoS</li> <li>Set the <code>Download Speed</code> and <code>Upload Speed</code> to your expected total aggregation speed and add 20% (1 Mbit = 1000 Kbit)</li> <li>Choose <code>connectify0</code> in <code>Interface name</code> and toggle enable</li> <li>Select <code>Queue Discipline</code> tab and set discipline/script to <code>cake/piece-of-cake</code></li> <li>Toggle the two <code>Show and Use Advanced Configuration.</code> to reveal <code>Advanced option string to pass to the ingress queueing</code> &amp; <code>...egress queueing</code></li> <li>In ingress textbox add <code>diffserv4 nat dual-dsthost ingress</code> &amp; in egress: <code>diffserv4 nat dual-srchost ack-filter</code></li> <li>Save &amp; Apply, changes are effective immediately.</li> </ol>"},{"location":"hostqos/#tips","title":"Tips","text":"<ul> <li> <p>Reduce the additional 20% added if there is no effect in small increments, test the results by downloading a large file with parallel sockets (download accelerator or speed test) on two clients with a 10 second delay before starting the download on the second client, both should show the speed each at ~50% of the total aggregate speed.   </p> </li> <li> <p>Without this setup, the delayed client will use 1/4th or so without host isolation shaping unless both clients (TCP) start at the same time due to bursty throughput, the effect is less noticable with near servers (less than 30ms delay).  </p> </li> <li> <p>Equal distribution works when all lines are in good conditions or near the speed set in SQM only.</p> </li> </ul>"},{"location":"intinstall/","title":"Install to internal drive","text":""},{"location":"intinstall/#description","title":"Description","text":"<p>Install SmoothWAN to an internal (non-removable) disk such as a laptop.</p> <p>Warning: All data will be lost.</p>"},{"location":"intinstall/#instructions","title":"Instructions","text":"<p>After running SmoothWAN with the Quick Setup instructions using a USB flash drive with a working internet connection, log-in to the Web UI:</p> <ol> <li>Enter <code>lsblk</code> in Services -&gt; Terminal after logging in to view connected disks.</li> <li>Note down the internal drive path, e.g <code>/dev/sda</code> as an example used in the next step. <pre><code>sda      8:0    0    320G  0 disk &lt;-- Ignore the numbered partitions below\n\u251c\u2500sda1   8:1    0     1M  0 part\n\u251c\u2500sda2   8:2    0   513M  0 part\n\u2514\u2500sda3   8:3    0  127.5G  0 part\n...\n</code></pre></li> <li>Download the image straight to the drive: <pre><code>curl -L https://github.com/SmoothWAN/SmoothWAN/releases/download/0.99.9HF5/SmoothWAN-0.99.9HF5-PC-EFI-AMD64-DiskImage-or-WebUI.img.gz | gzip -d -c | dd bs=4M of=/dev/sda conv=fsync\n</code></pre></li> <li>Power off, unplug the flash drive, then power on, your PC will restart twice in order to automatically expand and use the entire internal drive storage.</li> </ol>"},{"location":"lan/","title":"Change WAN port to LAN","text":""},{"location":"lan/#change-a-wan-port-to-lan","title":"Change a WAN port to LAN","text":"<p>Example using the Flint, changing <code>PortThree</code> to be used as LAN:</p> <p></p> <ol> <li>Visit Network -&gt; Interfaces and click Edit next to <code>PortThree</code> </li> <li>Select <code>unspecified</code> in Device field, note down the previous selection.</li> <li>Save and Apply then head to Devices sub-tab.</li> <li>Click Configure next to <code>br-lan</code> and check-box the interface name that you noted down in step 2. (<code>eth3</code> for the Flint)  </li> <li>All done! Network interruption may occur.</li> </ol>"},{"location":"macvlan/","title":"Cheap unmanaged switch Multi-WAN using MACVLAN","text":"<ul> <li>Device type: MACVLAN</li> <li>Base device: br-lan</li> <li>Mode: Bridge</li> <li>Device name: any name  </li> </ul> <p>Notes:  - MACVLAN is not a replacement for VLAN, use VLAN whenever possible. - Few modems especially ISP supplied will cause rogue DHCP scenario. They reject DHCP messages but the server is still on for internal reasons. MACVLAN is not suitable in this case. - MACVLAN is used for budget/fleet setups. - Do not enable software offload in firewall when using MACVLAN as it may affect the ARP table. - Some no-name 100-Mbit switches will perform poorly with multiple addresses from the same port due to limited switching fabric. Use a gigabit switch. - Disable IPv6 on all modems.  </p> <p>Diagnostics: </p> <ul> <li>(Simple) Microsoft Rogue DHCP Checker should show one DHCP server:  </li> </ul> <p> </p> <ul> <li>(Advanced) For Linux/MacOS, disconnect SmoothWAN, disconnect client from network, listen on broadcast with Wireshark, connect client to network, observe for any DHCP message, there should be a single source.</li> </ul>"},{"location":"modemtethr/","title":"Wi-Fi, modems, and tethering devices","text":""},{"location":"modemtethr/#usb-modems","title":"USB Modems","text":"<p>Modems using RNDIS or \"virtual Ethernet adapter\" are easier to setup. </p> <p>Suggested models:</p> <ul> <li>Huawei's Wingle series</li> <li>All Huawei model variants updated year 2015+ use RNDIS by default.</li> </ul> <p>MBIM, QMI, and others aren't automatically configured yet, be sure to disable USB interface namer in Speedify setup page before manually configuring a modem interface.</p>"},{"location":"modemtethr/#usb-wifi-adapters-in-client-mode","title":"USB WiFi Adapters in Client Mode","text":""},{"location":"modemtethr/#supported-modelschipset","title":"Supported models/chipset:","text":"<ul> <li>Check out \"morrownr\" community report compilation guide</li> </ul> <p>As a better alternative, wireless repeaters with an Ethernet socket work as clients in bridge mode, and you can optionally hide the repeater SSID. This solution is a decent alternative for stability, Wi-Fi 6E support, higher speeds and better range.</p>"},{"location":"modemtethr/#setup","title":"Setup","text":"<ul> <li>Plug in the dongle to a USB port that will remain fixed, changing ports requires reconfiguration</li> <li>Restart/Reboot SmoothWAN</li> <li>Configure in Network -&gt; Wireless </li> <li>Hit <code>Scan</code> and follow through, tick <code>Replace existing configuration</code> and set firewall to RED zone</li> <li>Done!</li> </ul>"},{"location":"proxmox/","title":"Proxmox Example","text":""},{"location":"proxmox/#installation-using-proxmox","title":"Installation using Proxmox","text":"<p>Application: Running SmoothWAN alongside Ubuntu/Windows or containers.</p> <ul> <li>Download the VMDK image from the release page.</li> <li>Download Proxmox ISO and flash to a USB drive using balenaEtcher:</li> </ul> <p></p> <ul> <li>Boot up your PC/server with the USB drive plugged in (you may have use the boot menu to select the drive)</li> <li>Follow the screenshots and set the IP address within the subnet of SmoothWAN (172.17.17.0/24)</li> </ul> <p> </p> <ul> <li>Create a new VM:</li> </ul> <p> </p> <ul> <li>Upload, extract and insert the image using the command line (works with Windows, MacOS, Linux):</li> </ul> <p> </p> <ul> <li>Double-click the unused image to add the drive:</li> </ul> <p> </p> <ul> <li>Change the boot order in Options and enable the drive:</li> </ul> <p></p> <ul> <li>Start the VM and click console to view SmoothWAN starting up (will reboot twice):</li> </ul> <p></p> <ul> <li>Visit SmoothWAN WebUI (172.17.17.2) to check if it is running:</li> </ul> <p></p> <ul> <li>Time to add the rest of the ethernet ports to SmoothWAN VM as WANs, assuming you have 3 extra ports in this example:</li> </ul> <p> </p> <ul> <li>Click Apply Configuration then head to the VM settings page and configure the new adapters after stopping the VM:</li> </ul> <p> </p> <ul> <li> <p>Do the same for the rest of the ports </p> </li> <li> <p>Start and check SmoothWAN setup page for the newly added WANs, a colourful network icon indicates that the interface is up (other than looking at the IP):</p> </li> </ul> <p></p> <ul> <li>Hint: to use 2 or more LAN ports (e.g. 2 WANs, 2 LANs in this example), remove the desired interface from the bridge ( <code>vmbr1</code> not removed in screenshots for clarity), and append interface to the first bridge, SmoothWAN uses the first (<code>vmbr0</code>) as LAN:</li> </ul> <p> </p>"},{"location":"rpi4/","title":"Raspberry Pi 4","text":"<p>Note: I no longer own one to test and they're hard to source! Last tested version was 0.99.8</p>"},{"location":"rpi4/#port-layout","title":"Port Layout","text":""},{"location":"rpi4/#troubleshooting","title":"Troubleshooting","text":""},{"location":"rpi4/#restarting-on-large-downloads-or-livestream-test","title":"Restarting on large downloads or livestream test","text":"<p>Indicates poor power supply, use the official RPi power supply or a 5.3V adapter and a USB-PD Type-C cable.</p>"},{"location":"rpi4/#red-led-flashing-erratically","title":"Red LED flashing erratically","text":"<p>Indicates poor power supply.</p>"},{"location":"rpi4/#unable-to-connect-to-smoothwan-setup-ssid","title":"Unable to connect to \"SmoothWAN Setup\" SSID","text":"<p>Setup in close proximity to the Pi, signal is not an indicator to use. Cause: RPi's internal Wi-Fi \"ACK-drop\" interval is very short and not adjustable.</p> <p>For maximum stability, you can reduce power consumption as well as performance (~180-Mbit) by editing <code>config.txt</code> in SD and adding <code>arm_freq=1000</code> at the end of the file.</p>"},{"location":"setup-glinet/","title":"GL.iNet (Easiest)","text":"<p>As of Q4 2024, Speedify now requires a license for routers.</p> Installation using a smartphone as an example for quick setup <ul> <li>Download and follow the instructions from the release page. </li> <li>Connect your wired internet connections (if available): </li> </ul> <p> </p> <ul> <li>The Slate or Flint is now broadcasting as a Wi-Fi access point for easy configuration, disable mobile data and connect your phone to Wi-Fi <code>SmoothWAN Setup 2.4 or 5Ghz</code> with password: <code>brassworld</code>. </li> <li>In your browser, visit: http://172.17.17.2 there is no password set: </li> </ul> <p> </p> <ul> <li>Skip the following steps if all your internet sources to be used by Speedify are wired, else head to <code>Simple Wi-Fi Setup</code>: </li> </ul> <p> </p> <p>You can change your access point SSID/Password as well</p> <p></p> <p>Enable the wireless WANs that you have configured</p> <p> </p> <p>With all your WANs now connected, install Speedify:</p> <p> </p> <p>All done!</p> <p>You can change your web login password in the administration page. </p> <p>Notes</p> <ul> <li>Some USB devices are problematic with SmoothWAN built-in USB network adapter renamer (the unique name shown in the example as <code>USB_1f16</code>), you can disable this option in Speedify navigation menu -&gt; Options. The adapter naming will be named by the order of first detection e.g <code>usb0</code>, <code>usb1</code> which can be random on every power up.  For data limited users, Speedify won't be able to tell which USB connected adapter corresponds to the set data limits and statistcs.</li> </ul> <p></p>"},{"location":"setup-pi4-others/","title":"Raspberry Pi 4 or PC","text":"<p>As of Q4 2024, Speedify now requires a license for routers.</p> <p>Raspberry Pis are now hard to source, the current support is community testing, few screenshots are not up to date and may look slightly different.</p> Setup <ul> <li>Download and follow the instructions from the release page.</li> <li>Connect your wired internet connections (if available):</li> </ul> <p></p> <ul> <li>The Pi is now broadcasting as a Wi-Fi access point, disable mobile data and connect your phone to Wi-Fi <code>SmoothWAN Setup</code> with password: <code>brassworld</code>. </li> <li>For PC or x86 router (Protectli, Qotom etc) users, use the first wired LAN port and a laptop instead of smartphone.</li> <li>In your browser, visit: http://172.17.17.2 there is no password set: </li> </ul> <p></p> <p></p> <p>Install Speedify:</p> <p></p> <p></p> <p></p> <p></p> <p>All done!</p> <p>You can change your web login password in the administration page. </p> Change WAN Names <p>To change the USB ports / WAN name, head to Interfaces-&gt;Multi-WAN USB:</p> <p></p> <p></p> <p></p> Using a Wi-Fi router or a Wi-Fi access point <p>The internal Wi-Fi of the Pi is unstable for general use, connect using RPi4's Ethernet port to a configured AP/router:</p> <ol> <li>Login to the Wi-Fi router's admin page or phone app.</li> <li>Set \"LAN IP address\" to <code>172.17.17.5</code> (you can change the last number by preference from 5-10)</li> <li>Disable \"DHCP Server\"</li> <li>Now plug SmoothWAN appliance to the LAN port instead of WAN. </li> </ol> <p>You have just created a \"Bridged Access Point\". You can access the Wi-Fi router setup page from <code>172.17.17.5</code></p> <p>Few examples with common vendors: TP-Link  Asus   Linksys  Netgear  Tenda </p> <p>After connecting your mobile over the Wi-Fi AP/router, head over to Network-&gt;Wireless and disable Pi's Wi-Fi:</p> <p></p> <p></p> <p>Notes</p> <ul> <li>Some USB devices are problematic with SmoothWAN built-in USB network adapter renamer (the unique name shown in the example as <code>USB_1f16</code>), you can disable this option in Speedify navigation menu -&gt; Options. The adapter naming will be named by the order of first detection e.g <code>usb0</code>, <code>usb1</code> which can be random on every power up.  For data limited users, Speedify won't be able to tell which USB connected adapter corresponds to the set data limits and statistcs.</li> </ul> <p></p>"},{"location":"slate/","title":"Slate AX","text":""},{"location":"slate/#port-layout","title":"Port Layout","text":"<p>Credits to sqlazer for sending one for testing and support </p>"},{"location":"slate/#troubleshooting","title":"Troubleshooting","text":""},{"location":"slate/#adding-second-wired-wan-drops-the-other-wired-wan","title":"Adding second wired WAN drops the other wired WAN","text":"<p>Make sure that you have installed the Slate AX image, the Flint image works with the wrong port configuration (they're the same hardware).</p>"},{"location":"slate/#slate-ax-wi-fi-scan-results-empty-only-in-version-0998","title":"Slate AX Wi-Fi scan results empty (Only in version 0.99.8)","text":"<p>Disable existing AP/configurations (click Disable buttons) before scanning. This issue was fixed in version 0.99.x</p>"},{"location":"slate/#80211kvsr-support","title":"802.11k/v/s/r Support","text":"<p>For versions below 0.99.9 GL.iNet <code>wpad</code> is stripped, force update from OpenWrt official server after installation and reboot: <code>opkg update &amp;&amp; opkg remove wpad-openssl &amp;&amp; opkg install wpad-openssl --force-overwrite</code></p>"},{"location":"sponsors/","title":"Credits & Donation","text":"<ul> <li>Testing, feedback &amp; donations from users </li> <li>OpenWRT and LuCI  </li> <li>Speedify support</li> <li>Engarde (by porech)</li> <li>TinyFEC VPN (by wangyu-)</li> </ul> <p>Mat\u00e9 Donors \u2764</p> <p>Special thanks to: Privacy note:  Add <code>***</code> at the end of the donation message if you want to be exempt from this list.</p> <p>Buy me mat\u00e9 \ud83e\uddc9 , project is now dedicated to Parrot Rescue Lebanon.</p> <p>Donate to Parrot Rescue Lebanon \ud83e\udd9c</p>"},{"location":"tail/","title":"Tailscale","text":"<p>Access to devices connected to your home network remotely (e.g old security system, automation, NAS)</p>"},{"location":"tail/#setup-after-installing-speedify-or-setting-up-a-wan","title":"Setup after installing Speedify or setting up a WAN","text":"<p>Log result should be similar to:  Visit: http://172.17.17.2:8088/ to login/signup to Tailscale.  </p> <p>After a successful login, visit: Tailscale admin page and toggle settings as the following: </p>"},{"location":"tail/#after-installation","title":"After installation","text":"<ul> <li>You will be able to access your local (LAN) devices from range 172.17.17.0 to 172.17.17.255 remotely on any device that has Tailscale running and connected to the same account.</li> <li>You can enable \"exit node\" option in dashboard to use your home networking internet on the go. E.g Bypass Netflix location / account sharing restrictions.</li> </ul>"},{"location":"tinyfec/","title":"TinyFEC","text":"<ul> <li>TinyFEC VPN (by wangyu-): A VPN Designed for Lossy Links, with built-in Forward Error Correction (FEC). Improves your network quality on a high-latency lossy link.</li> <li>Corrects a single internet source (WAN) only.</li> <li>Improves network speed on lossy internet connections by sending redundant packets.</li> <li>Low goodput on high throughput connections due to the redundancy, however dynamic adjustment is enabled.</li> <li>Dynamic adjustment increases/decreases redundant packets on packet loss levels to reduce bandwidth waste.</li> <li>Significant performance improvements are noticeable with single TCP connections and browsing responsiveness.</li> <li>Processing intensive, requiring 3.0Ghz Intel/AMD router and server for &gt;100Mbit speeds.</li> </ul> <p>Server setup using Vultr (Amazon EC2) as an example with cloud-init: Visit https://my.vultr.com and login/signup, then follow the arrows:  Choose Cloud Compute  Choose High Frequency (since TinyFEC VPN is single threaded)  Choose latest Ubuntu and the nearest location, example selects European region  Choose a plan according to bandwidth to be used, not hardware resources  Copy and paste the content below then locate and change the password in the pasted content:</p> <p> Wait few minutes till the IP address appears, and note it down You can wait few minutes or monitor progress by clicking View Console   Copy the noted IP address &amp; password in the configuration tab of this page and check Enable, Save &amp; Apply  All done! Check your IP address at ping.eu,speedtest.net,etc... to check if it's working correctly, it should match the IP address of your server.</p> Notes: <ul> <li>The server is setup to forward ports from 1024 to 65000 to your SmoothWAN appliance/router, adjust as needed.</li> <li>Modern implementation UPnP is automatically configured and enabled for automatic port forwarding.</li> <li>You can also forward ports in VPN -&gt; VPN Port Forwarding.</li> <li>Changing password is done by simply changing the cloud-init field and doing a server reinstall.</li> <li>VPN via server providers is (usually) not log-free as it's used for abuse monitoring, privacy may be equivalent to a direct ISP connection.</li> <li>You can use other providers, Vultr is used as it's the easiest, there is no affiliation.</li> <li>You may need to modify the cloud-init script for some providers, it's limited to KVM/Virt machines only.</li> <li>SSH on the server is disabled by default.</li> </ul>"},{"location":"tips/","title":"Tips & Troubleshooting","text":""},{"location":"tips/#using-the-raspberry-pi-as-a-tethering-device","title":"Using the Raspberry Pi as a tethering device","text":"<p>Connect the Type-C port on the Pi to your PC/Camera, it will automatically tether the internet over Speedify.</p> <p>For 0.99.9HF5 and below Windows requires an additional driver.</p>"},{"location":"tips/#identifying-client-using-p2p-or-bittorrent","title":"Identifying client using P2P or BitTorrent","text":""},{"location":"tips/#issues-with-wi-fi-24ghz-clients-wireless-wan","title":"Issues with Wi-Fi 2.4Ghz clients (Wireless WAN)","text":"<p>Check for connected USB 3.0+ devices as it's a common issue with 2.4Ghz Wi-Fi</p>"},{"location":"tips/#bridging-a-wi-fi-ssid-to-an-ethernet-port","title":"Bridging a Wi-Fi SSID to an ethernet port","text":"<p>Create a new bridge, and move the port from LAN/WAN to the new bridge, then select the bridge in Interfaces -&gt; Wireless -&gt; Edit -&gt; Network.</p>"},{"location":"tips/#quick-vlan-setup","title":"Quick VLAN setup","text":"<p>Assuming ISP modem is plugged at trunk #1 on the managed switch: Network -&gt; Interfaces -&gt; Devices -&gt; Add device configuration </p> <p>(change Device Name for a more friendly name to appear in Speedify UI) </p> <p></p> <p>Network -&gt; Interfaces -&gt; Add new interface </p> <p> </p> <p>Set Firewall zone to RED, and gateway metric to <code>200</code> or more.</p>"},{"location":"tips/#reduceing-bufferbloat-for-gaming","title":"Reduceing bufferbloat for gaming","text":"<ul> <li>Set one WAN as \"Primary\", preferably the landline or the lowest latency, others as \"Secondary\".    </li> <li>Set transport mode to UDP, and rate limit each to 70% of max speed.  </li> <li>Optionally set mode to redundant.</li> <li>Engarde may perform better than Speedify in this case but will use significantly more bandwidth.</li> </ul> <p>Ping (ICMP) is not a good measure, in \"Streaming mode\" detected flows are optimized and use a different path (redundant - low buffer). Use in-game latency indicators. Speedify UDP mode seems to require powerful hardware to control bufferbloat to a minimum (~10%), use an Intel/AMD router.</p>"},{"location":"tips/#hide-interface-or-wan-from-speedify","title":"Hide interface or WAN from Speedify","text":"<p>Rename interface to start with \"br-\"</p>"},{"location":"tips/#check-downloaded-image-integrity","title":"Check downloaded image integrity","text":"<p>You can use in-browser tools to check the file for errors, the calculated sum is in <code>sha256.*</code> file in the Releases section.  OpenWrt upgrade UI may also show you the sha256 checksum calculated after being received.</p>"},{"location":"tsthw/","title":"Tested Hardware","text":"<p>Note for PCs: USB flash drives are not recommended #109, use SD card with USB reader if there is no internal storage.</p>"},{"location":"tsthw/#usb-ethernet-adapter","title":"USB Ethernet Adapter","text":"<p>Not recommended: </p> <ul> <li>TP-Link and U-Green ASIX-based chipset</li> <li>Non-brand name Realtek-based chipset </li> <li>Flat cable type and/or cable length &gt;15cm</li> <li>Using USB 2.0 hubs</li> </ul>"},{"location":"tsthw/#mobile-hotspot-plug-and-play","title":"Mobile Hotspot (plug and play)","text":"<ul> <li>Verizon 8800L</li> <li>AT&amp;T Nighthawk M6 Pro </li> </ul>"},{"location":"tsthw/#network-switch-for-macvlan","title":"Network Switch for MACVLAN","text":"<ul> <li>Unmanaged NETGEAR GS108UK</li> <li>Unmanaged ~8 USD TOTOLINK S808G</li> </ul>"},{"location":"tsthw/#usb-tethering","title":"USB Tethering","text":"<ul> <li>Android USB tethering may be limited to ~150 Mbit due to USB networking emulation.</li> <li>iOS 13+ USB tethering is not officially supported since it is impractical:<ul> <li>Need to tap \"Trust\" on every reconnection/hiccup up with <code>usbmuxd</code> unlike iTunes</li> <li>If cellular signal is weak, tethering will automatically disconnect requiring USB physical reconnection to continue tethering.</li> <li>Partial workarounds</li> </ul> </li> </ul>"},{"location":"vpn/","title":"VPN over VPN","text":""},{"location":"vpn/#tunneling-all-clients-to-a-vpn-over-speedifyengardetinyfec","title":"Tunneling all clients to a VPN over Speedify/Engarde/TinyFEC","text":"<p>Experimental</p> <p>Setup your VPN as you would in any OpenWrt router, many VPN providers provide instructions for OpenWrt.</p> WireGuard VPN example <p>\"A screenshot is worth a thousand words\".</p> <p>Cloudflare WARP VPN example:</p> <p> </p> WireGuard extra steps for SmoothWAN v0.99.9 <p>There is currently an issue with OpenWrt <code>netifd</code> allowing WireGuard to bypass Speedify and bind to the first WAN up &amp; not following the routing tables...</p> <p>The current workaround is to use firewall markings.</p> <ol> <li>Add a firewall marking by going to Network -&gt; Firewall -&gt; Traffic Rules -&gt; Add </li> <li>Add an IP rule by going to Network -&gt; Routing -&gt; IPv4 Rules -&gt; Add.</li> <li>Choose <code>main</code> table &amp; in Advanced Settings tab, enter <code>0x100</code> in Firewall mark and <code>3276</code> in Priority.</li> </ol> OpenVPN example <ul> <li>TODO</li> </ul> <ol> <li>Edit your VPN configuration in Network -&gt; Interface -&gt; Edit next to the VPN interface and select one of the <code>BYP</code> tables in Advanced Settings tab -&gt; Override IPv4 routing table (as well as IPv6 if used), there are 10 presets. </li> <li>Add an IP rule by going to Network -&gt; Routing -&gt; IPv4 Rules -&gt; Add button.</li> <li>Enter your LAN IP range in Source, by default it is <code>172.17.17.0/24</code> and select the <code>BYP</code> table you chose earlier.</li> <li>Add a static route by going to Network -&gt; Routing -&gt; Static IPv4 Routes -&gt; Add button.</li> <li>Choose <code>lan</code> in Interface and enter your LAN IP range in Target, by default it is <code>172.17.17.0/24</code> and select the <code>BYP</code> table you chose earlier in Advanced Settings tab.</li> <li>Save and Apply, confirm that your IP address has changed from the bypassed clients.</li> <li>Done! For IPv6 users, you will have to use MAC addresses instead (TODO: Guide).</li> </ol> <p>To tunnel specific clients/IP addresses to the VPN, treat the VPN interface as a WAN, and follow the steps in Bypass clients to a specific WAN instead of this guide.</p> <p>Never share the same routing table number <code>BYP</code> with other WANs/VPNs. Note that some VPN providers throttle multi-hop/cascading setups.</p>"},{"location":"wan/","title":"Change LAN port to WAN","text":""},{"location":"wan/#change-a-lan-port-to-wan","title":"Change a LAN port to WAN","text":"<p>Example using the Flint, changing <code>LAN</code> to be used as WAN:</p> <p></p> <ol> <li>Visit Network -&gt; Devices, then click Edit next to <code>br-lan</code>. </li> <li>Select <code>unspecified</code> in Bridge ports field, and note down the previous selection (<code>eth4</code> in Flint, <code>eth2</code> in Slate, <code>eth0</code> others.).</li> <li>Save and Apply then head to Interfaces sub-tab.</li> <li>Click Add new interface...,choose a name and the previously noted device, then set metric to a number higher than <code>10</code>, and firewall to zone RED.  </li> <li>All done! Wi-Fi interruption may occur.</li> </ol>"},{"location":"wanbyp/","title":"Bypass clients to a specific WAN","text":""},{"location":"wanbyp/#split-tunneling","title":"Split Tunneling","text":"<p>Set your DHCP server to provide a static IP address to the target client. (Can be skipped if set on client)</p> <p>Network -&gt; DHCP and DNS -&gt; Static Leases -&gt; Add button and choose the MAC address &amp; specify IP address.</p> <p>Follow these steps to bypass a static IP client to a specific WAN:</p> <ol> <li>Head to Network -&gt; Interfaces -&gt; Edit button next to the WAN to be used.</li> <li>Advanced Settings -&gt; Override IPv4 routing table, select one of the <code>BYP</code> tables, there are 10 presets. When split-tunneling other WANs do not use the same table.</li> <li>Save then head to Network -&gt; Routing -&gt; IPv4 Rules -&gt; Add</li> <li>Set Incoming interface to <code>lan</code> and source to your client IP address. e.g <code>172.17.17.100/32</code></li> <li>Select the <code>BYP</code> you chose earlier in Table and click Save and Apply.</li> <li>Done! For IPv6 users, you will have to use MAC addresses instead (TODO: Guide).</li> </ol> <p>Never share the same routing table number <code>BYP</code> with other WANs/VPNs.</p>"},{"location":"wanbyp/#bypass-a-range-of-ip-addresses","title":"Bypass a range of IP addresses","text":"<p>Use CIDR calculators such as https://www.ipaddressguide.com/cidr Example: using <code>172.17.17.32/27</code> will bypass clients with IP addresses between <code>172.17.17.32</code> and <code>172.17.17.63</code> <code>/32</code> CIDR such as in the previous examples equals to one IP address.</p>"}]}